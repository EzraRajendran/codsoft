# -*- coding: utf-8 -*-
"""my chat bot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YgFcLF4rl_13JRBya28wbOKnqNY8sxAX
"""

import io
import random
import string
import warnings
import numpy as np # for numarical calculations while working on the project
from sklearn.feature_extraction.text import TfidfVectorizer#using the sklearn library feature extraction for text which we made
from sklearn.metrics.pairwise import cosine_similarity
warnings.filterwarnings('ignore')

import nltk #nlp library
from nltk.stem import WordNetLemmatizer # natural language processing using stem
nltk.download('popular', quiet=True)
nltk.download('punkt')# we are using punkt and wornet for this prject
nltk.download('wordnet')

f=open('chatbot.txt','r',errors = 'ignore')#chat bot text file : "https://drive.google.com/drive/folders/1i6jFX5xFZU7lEUGkFhni_nRXUwTr9YnM?usp=drive_link"
raw=f.read()# also have file link in my drive go checkout
raw = raw.lower()

sent_tokens = nltk.sent_tokenize(raw)
word_tokens = nltk.word_tokenize(raw)

lemmer = nltk.stem.WordNetLemmatizer()
def LemTokens(tokens):
    return [lemmer.lemmatize(token) for token in tokens]
remove_punct_dict = dict((ord(punct), None) for punct in string.punctuation)

def LemNormalize(text):
    return LemTokens(nltk.word_tokenize(text.lower().translate(remove_punct_dict)))



GREETING_INPUTS = ("hello", "hi", "hey", "greetings", "sup", "what's up")
GREETING_RESPONSES = ["Hi there!", "Hello!", "Hey!", "Greetings!", "How can I assist you today?"]
def detect_and_respond_to_greeting(sentence):
    for word in sentence.split():
        if word.lower() in GREETING_INPUTS:
            return random.choice(GREETING_RESPONSES)

def response(user_response):
    robo_response=''
    sent_tokens.append(user_response)
    TfidfVec = TfidfVectorizer(tokenizer=LemNormalize, stop_words='english')
    tfidf = TfidfVec.fit_transform(sent_tokens)
    vals = cosine_similarity(tfidf[-1], tfidf)
    idx=vals.argsort()[0][-2]
    flat = vals.flatten()
    flat.sort()
    req_tfidf = flat[-2]
    if(req_tfidf==0):
        robo_response=robo_response+"I am sorry! I don't understand you"
        return robo_response
    else:
        robo_response = robo_response+sent_tokens[idx]
        return robo_response

flag=True
print("Chit-Chat: My name is chit-chat. I will answer your queries about Chatbots. If you want to exit, type Bye!")
while(flag==True):
    user_response = input()
    user_response=user_response.lower()
    if(user_response!='bye'):
        if(user_response=='thanks' or user_response=='thank you' ):#some responses from our chat bot
            flag=False
            print("Chit-chat: You are welcome..")
        else:
            if(greeting(user_response)!=None):
                print("Chit-chat: "+greeting(user_response))
            else:
                print("Chit-chat: ",end="")
                print(response(user_response))
                sent_tokens.remove(user_response)
    else:
        flag=False
        print("Chit-chat: Bye! have nice day..")



